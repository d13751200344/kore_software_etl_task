<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/29/2024 12:38:57 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CAROL"
  DTS:CreatorName="CAROL\chen"
  DTS:DTSID="{A7E0B269-7C64-4702-A7CE-F9871C357AE5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="3084"
  DTS:ObjectName="V4_"
  DTS:PackageType="5"
  DTS:VersionBuild="130"
  DTS:VersionGUID="{DA50E8EB-38F7-4F71-8322-470CA721D89D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{4834AF77-6389-4A6B-AAC3-745DD52431CE}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\Users\chen\Desktop\ETL_Daniel\GenerateCSV\xlsxtable.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{76CF56EA-0D1B-48E3-B224-212137744D43}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="4105"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="D:\Users\chen\Desktop\ETL_Daniel\GenerateCSV\SourceFile2.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{A6EF4B67-3073-4778-BEBA-DD86C9B5B1E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{68AE79D5-A25A-4054-94D7-FBAAAF75B679}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{11DF5876-3DDF-4CAB-8BFA-9991A71F4D0E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="29"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{EEC3FF62-5993-4C97-AAAE-0E046E6A27BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{341BE25F-8CA2-4EA5-9672-2A20B5637EE7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{57EA25EA-8223-4523-9BCB-71DBA6ADDEDF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{65B4FF85-BA2A-456A-A18C-C7C1E63404E0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5DFDF22C-97BC-4D99-ABBA-B472B05B677F}"
      DTS:ObjectName="KoreAssignment_Daniel_Wu">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=Carol;Initial Catalog=KoreAssignment_Daniel_Wu;Provider=SQLOLEDB.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{5DFDF22C-97BC-4D99-ABBA-B472B05B677F}Carol.KoreAssignment_Daniel_Wu;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2C99FB28-7B4A-42D6-9E38-42C6D2FBAB7B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5DFDF22C-97BC-4D99-ABBA-B472B05B677F}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE stg.Users;&#xA;TRUNCATE TABLE stg.Users_Problem1;&#xA;TRUNCATE TABLE stg.Users_Problem2;&#xA;TRUNCATE TABLE stg.Users_noConversion;&#xA;TRUNCATE TABLE prod.Users;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Data to Staging Tbl"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="数据流任务"
      DTS:DTSID="{38C9AF7A-75BA-4DBA-BFAD-79339D52E5F1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Data to Staging Tbl"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Data to Staging Tbl\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="有条件拆分;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="根据数据内容将数据行路由到不同的输出。使用条件(SSIS 表达式)指定要路由的行。例如，将需要清理的记录与准备加载的记录分隔开，或仅路由记录的某个子集。"
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]"
                  description="有条件拆分转换的输入"
                  name="有条件拆分输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入].Columns[IsValid]"
                      cachedDataType="bool"
                      cachedName="IsValid"
                      lineageId="Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0].Columns[IsValid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[No null values]"
                  description="有条件拆分转换的输出 1"
                  errorOrTruncationOperation="计算"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="No null values"
                  synchronousInputId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式。此表达式版本使用世系标识符而不是列名。"
                      name="Expression">#{Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0].Columns[IsValid]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式的友好版本。此表达式版本使用列名。"
                      expressionType="Notify"
                      name="FriendlyExpression">IsValid ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="指定该条件在转换计算的条件列表中所处的位置。计算顺序是从最小值到最大值。"
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[Contains null]"
                  description="有条件拆分转换的输出 2"
                  errorOrTruncationOperation="计算"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Contains null"
                  synchronousInputId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式。此表达式版本使用世系标识符而不是列名。"
                      name="Expression">#{Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0].Columns[IsValid]} ==  FALSE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式的友好版本。此表达式版本使用列名。"
                      expressionType="Notify"
                      name="FriendlyExpression">IsValid ==  FALSE </property>
                    <property
                      dataType="System.Int32"
                      description="指定该条件在转换计算的条件列表中所处的位置。计算顺序是从最小值到最大值。"
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分默认输出]"
                  description="有条件拆分转换的默认输出"
                  exclusionGroup="1"
                  name="有条件拆分默认输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分错误输出]"
                  description="有条件拆分转换的错误输出"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="有条件拆分错误输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\csv file source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="平面文件源;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;1"
              description="平面文件源"
              localeId="4105"
              name="csv file source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="指定是否将长度为 0 的列视为 Null。"
                  name="RetainNulls">true</property>
                <property
                  dataType="System.String"
                  description="指定包含该文件名的输出列的名称。如果未指定名称，则不会生成包含该文件名的输出列。"
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Data to Staging Tbl\csv file source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出]"
                  name="平面文件源输出">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[UserID]"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[FullName]"
                      length="25"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[Email]"
                      length="29"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]"
                      codePage="65001"
                      dataType="str"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="指示数据是否为二进制格式。"
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[UserID]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[FullName]"
                      codePage="65001"
                      dataType="str"
                      length="25"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[Age]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[Email]"
                      codePage="65001"
                      dataType="str"
                      length="29"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[RegistrationDate]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[LastLoginDate]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].ExternalColumns[PurchaseTotal]"
                      codePage="65001"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出]"
                  isErrorOut="true"
                  name="平面文件源错误输出">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                      codePage="65001"
                      dataType="text"
                      description="平面文件源错误输出列"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                      name="平面文件源错误输出列" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\Data type conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="数据转换;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="数据转换"
              name="Data type conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入]"
                  name="数据转换输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[UserID]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[FullName]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="FullName"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[Age]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[Email]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="29"
                      cachedName="Email"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[RegistrationDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[LastLoginDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入].Columns[PurchaseTotal]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出]"
                  exclusionGroup="1"
                  name="数据转换输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_UserID]"
                      name="Conv_UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="25"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_FullName]"
                      name="Conv_FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Age]"
                      name="Conv_Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="29"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Email]"
                      name="Conv_Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      name="Conv_RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      name="Conv_LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      name="Conv_PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="数据转换错误输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\Data type conversion 2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="数据转换;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="数据转换"
              name="Data type conversion 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入]"
                  name="数据转换输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[UserID]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[FullName]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="FullName"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[Age]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[Email]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="29"
                      cachedName="Email"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[RegistrationDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[LastLoginDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入].Columns[PurchaseTotal]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出]"
                  exclusionGroup="1"
                  name="数据转换输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_UserID]"
                      name="Conv_UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="25"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_FullName]"
                      name="Conv_FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Age]"
                      name="Conv_Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="29"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Email]"
                      name="Conv_Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      name="Conv_RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      name="Conv_LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      name="Conv_PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="数据转换错误输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
              description="OLE DB 目标"
              name="Load to stgUser_Problem1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="指定用于打开行集的数据库对象的名称。"
                  name="OpenRowset">[stg].[Users_Problem1]</property>
                <property
                  dataType="System.String"
                  description="指定包含用于打开行集的数据库对象名的变量。"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="要执行的 SQL 命令。"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="指定当数据源中没有代码页信息时使用的列代码页。"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="指定用于访问数据库的模式。"
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  connectionManagerRefId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  description="指定用于访问数据库的 OLE DB 运行时连接。"
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入]"
                  errorOrTruncationOperation="插入"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB 目标输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_UserID"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_UserID]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_FullName]"
                      cachedDataType="wstr"
                      cachedLength="25"
                      cachedName="Conv_FullName"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_FullName]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_Age"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Age]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_Email]"
                      cachedDataType="wstr"
                      cachedLength="29"
                      cachedName="Conv_Email"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_Email]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_RegistrationDate"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_LastLoginDate"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].Columns[Conv_PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_PurchaseTotal"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Outputs[OLE DB 目标错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB 目标错误输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        bool isValidUserID = !Row.UserID_IsNull;

        bool isValidFullName = !Row.FullName_IsNull && !string.IsNullOrEmpty(Row.FullName);

        bool isValidAge = !Row.Age_IsNull;

        bool isValidEmail = !Row.Email_IsNull && !string.IsNullOrEmpty(Row.Email);

        bool isValidRegistrationDate = !Row.RegistrationDate_IsNull;
        bool isValidLastLoginDate = !Row.LastLoginDate_IsNull;

        bool isValidPurchaseTotal = !Row.PurchaseTotal_IsNull;

        bool isValid = isValidUserID && isValidFullName && isValidAge && isValidEmail &&
                        isValidRegistrationDate && isValidLastLoginDate && isValidPurchaseTotal;

        Row.IsValid = isValid;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String UserID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool UserID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FullName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FullName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Age
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Age_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Email
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Email_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String RegistrationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool RegistrationDate_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String LastLoginDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool LastLoginDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String PurchaseTotal
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool PurchaseTotal_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Boolean IsValid
    {
        set
        {
            this[7] = value;
        }
    }
    public bool IsValid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6411c7312ef14add97f68a3727848a2b.Properties.Settings.get_Default():SC_6411c7312ef14add97f68a3727848a2b.Properties.Sett" +
    "ings")]

namespace SC_6411c7312ef14add97f68a3727848a2b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6411c7312ef14add97f68a3727848a2b.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{695962C7-4AC5-4CD1-B495-923E4F6E5E7F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6411c7312ef14add97f68a3727848a2b</RootNamespace>
    <AssemblyName>SC_6411c7312ef14add97f68a3727848a2b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_6411c7312ef14add97f68a3727848a2b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_6411c7312ef14add97f68a3727848a2b</msb:DisplayName>
    <msb:ProjectId>{48772D74-0D14-415A-8CF5-B71555D96741}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_6411c7312ef14add97f68a3727848a2b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6411c7312ef14add97f68a3727848a2b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6411c7312ef14add97f68a3727848a2b")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6411c7312ef14add97f68a3727848a2b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6411c7312ef14add97f68a3727848a2b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6411c7312ef14add97f68a3727848a2b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6411c7312ef14add97f68a3727848a2b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6411c7312ef14add97f68a3727848a2b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6411c7312ef14add97f68a3727848a2b.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOncqWYAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAACjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALg0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
NAAAAAAAAEgAAAACAAUA4CIAACARAAABAAAAAAAAAAA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAgAAAAAEAABEDbwcAAAYW
/gEDbwkAAAYtEANvCAAABigSAAAKFv4BKwEWCgNvCwAABhb+AQsDbw0AAAYtEANvDAAABigSAAAK
Fv4BKwEWDANvDwAABhb+AQ0DbxEAAAYW/gETBANvEwAABhb+ARMFBl8HXwhfCV8RBF8RBV8TBgMR
Bm8UAAAGKh4CKBgAAAYqKgIDBAUoEwAACipSAnsUAAAKAnsVAAAKFpRvFgAACioiAhYoFwAACipS
AnsUAAAKAnsVAAAKF5RvFgAACioiAhcoFwAACipSAnsUAAAKAnsVAAAKGJRvFgAACioiAhgoFwAA
CipSAnsUAAAKAnsVAAAKGZRvFgAACioiAhkoFwAACipSAnsUAAAKAnsVAAAKGpRvFgAACioiAhoo
FwAACipSAnsUAAAKAnsVAAAKG5RvFgAACioiAhsoFwAACipSAnsUAAAKAnsVAAAKHJRvFgAACioi
AhwoFwAACio6Ah0DjBsAAAEoGAAACipaAywIAh0oGQAACipyAQAAcHMaAAAKeh4CKBsAAAoqHgIo
HAAACip+AigdAAAKAgJzHAAABn0BAAAEAgJzHQAABn0CAAAEKpIEcp4AAHAabx4AAAosFQIFAgMo
HwAACg4EcwUAAAZvGgAABipKKwcCA28bAAAGA28WAAAGLfEqBio6AiggAAAKAgN9AwAABCo6Aigg
AAAKAgN9BAAABCoeAiggAAAKKq5+BQAABC0ecq4AAHDQBwAAAighAAAKbyIAAApzIwAACoAFAAAE
fgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCQAAAoqLnMjAAAGgAcAAAQqAAAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAsAYAACN+AAAcBwAAIAcAACNTdHJpbmdzAAAA
ADwOAAAgAQAAI1VTAFwPAAAQAAAAI0dVSUQAAABsDwAAtAEAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6ATMAFgAAAQAAACAAAAAIAAAABwAAACQAAAAPAAAAJAAAABAAAAABAAAAAwAAABMAAAAU
AAAAAQAAAAQAAAABAAAAAABcAwEAAAAAAAYANwJKBQYAywJKBQYAgwE3BQ8AvgUAAAYAsAGMBAYA
GgKMBAYA+wGMBAYAsgKMBAYAVwKMBAYAcAKMBAYAxwGMBAYA4gEGAwoAiwKpAAoACQWpAA4A+gSp
AAoA1QSpAAoAhAapAAYARwY8BAYAZgE3BQYAGgVqBQYAyQR3BBIANgE8AxIAlwE8AxIA9wBiBAYA
SwFKBQYAIwM8BAYATwQ8BAYAngQ8BAYAuAQ8BAYAygA8BAYAbgA8BAYACQeMBAAAAAABAAAAAAAB
AAEAAQAQAFcEAAAQAAEAAQABABAA7QQAADkAAQAFAAEAEABmBgAARQABABgAAQAQADsGAABJAAMA
HAABABAA/AUAAEkABAAdAAAAEABxBc0FSQAFAB4AAAEQACsGzQVhAAcAIgAGADsGhAAGAPwFiAAB
AHQGjAABAHQGjAARAEMEkAARAOcAlAARAFYAmABQIAAAAADGAOkCBgABAFggAAAAAMYA9AIGAAEA
YCAAAAAAxgDmBpwAAQDsIAAAAACGGCoFBgACAPQgAAAAAIYYKgUqAAIA/yAAAAAAhggKAKIABQAU
IQAAAACGCIQDTAAFAB0hAAAAAIYIkgCiAAUAMiEAAAAAhgi4A0wABQA7IQAAAACGCGYAogAFAFAh
AAAAAIYIqQNMAAUAWSEAAAAAhghSA6IABQBuIQAAAACGCBoETAAFAHchAAAAAIYIIQGiAAUAjCEA
AAAAhgjlA0wABQCVIQAAAACGCA8BogAFAKohAAAAAIYIzANMAAUAsyEAAAAAhggqA6IABQDIIQAA
AACGCAEETAAFANEhAAAAAIYISgCmAAUA4CEAAAAAhgiWA6YABgD3IQAAAACGAP0GTAAHAP8hAAAA
AIYATgZMAAcAByIAAAAAhhgqBQYABwAnIgAAAADGANkGqwAHAEwiAAAAAMYB0gacAAsAXyIAAAAA
xgHmBpwADABhIgAAAACGGCoFtQANAHAiAAAAAIYYKgW1AA4AfyIAAAAAgxgqBQYADwCHIgAAAACT
CBYFuwAPALMiAAAAAJMIzwDAAA8AuiIAAAAAkwjbAMUADwDCIgAAAACWCFoGywAQAMkiAAAAAIYY
KgUGABAA0SIAAAAAkRgwBdAAEAAAAAEAAQcAAAEADwUAAAIABgYAAAMA4wQAAAEAAAMAAAEAAAMA
AAEAFQAAAAIAnwAAAAMADwUAAAQA4wQAAAEADwUAAAEAAQcAAAEAigYAAAEAigYAAAEAAAMJACoF
AQARACoFBgAZACoFCgApACoFEAAxACoFEAA5ACoFEABBACoFEABJACoFEABRACoFEABZACoFEABh
ACoFEABpACoFBgCZACoFBgC5ACoFFQDJACoFBgCJAOkCBgCJAPQCBgDRABIHJQBxACoFKgBxAA8F
NABxAAYGOAB5ACADPABxACQEQQBxADMERgBxACsEAQDhACoFEABxAP0GTABxAE4GTACJACoFBgDR
ADQGUACJABoGVwCRACoFBgDxAIAAXQDxAAUHZAChACoFagDBACoFBgAuAAsA6wAuABMA9AAuABsA
EwEuACMAHAEuACsARQEuADMARQEuADsARQEuAEMAHAEuAEsASwEuAFMARQEuAFsAYgFDAGMArAHh
AHsArAHjAGsArAEpAnMAEwFJAnMAEwEbAAMAAQAHABEACAATAAAADgDUAAAAiAPYAAAAlgDUAAAA
vAPYAAAAagDUAAAArQPYAAAAVgPUAAAAHgTYAAAAJQHUAAAA6QPYAAAAEwHUAAAA0APYAAAALgPU
AAAABQTYAAAATgDYAAAAmgPYAAAAGgXcAAAA7wDhAAAAXgbmAAIABgADAAIABwAFAAIACAAHAAIA
CQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAIAEAAXAAIAEQAZAAIAEgAb
AAIAEwAdAAEAFAAfAAEAFQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAASAAAABAAAAAAAAAAAA
AAAAAB0AAAAEAAAAAAAAAAAAAAByAEEAAAAAABAAAAAAAAAAAAAAAHsAlAYAAAAAEAAAAAAAAAAA
AAAAewCxBgAAAAAEAAAAAAAAAAAAAAByADwEAAAAAAAAAAABAAAAewUAAAAAAAAAPE1vZHVsZT4A
Z2V0X1VzZXJJRABJbnB1dElEAFNDXzY0MTFjNzMxMmVmMTRhZGQ5N2Y2OGEzNzI3ODQ4YTJiAG1z
Y29ybGliAHNldF9Jc1ZhbGlkAGRlZmF1bHRJbnN0YW5jZQBnZXRfQWdlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9GdWxsTmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X0xhc3RMb2dpbkRhdGUAZ2V0X1Jl
Z2lzdHJhdGlvbkRhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmlu
ZwBnZXRfUHVyY2hhc2VUb3RhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAZ2V0X0VtYWlsAFNDXzY0
MTFjNzMxMmVmMTRhZGQ5N2Y2OGEzNzI3ODQ4YTJiLmRsbABnZXRfVXNlcklEX0lzTnVsbABzZXRf
SXNWYWxpZF9Jc051bGwAZ2V0X0FnZV9Jc051bGwAZ2V0X0Z1bGxOYW1lX0lzTnVsbABnZXRfTGFz
dExvZ2luRGF0ZV9Jc051bGwAZ2V0X1JlZ2lzdHJhdGlvbkRhdGVfSXNOdWxsAGdldF9QdXJjaGFz
ZVRvdGFsX0lzTnVsbABnZXRfRW1haWxfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJl
c291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9u
AFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5w
dXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzY0MTFjNzMxMmVmMTRhZGQ5N2Y2OGEzNzI3ODQ4
YTJiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ182NDEx
YzczMTJlZjE0YWRkOTdmNjhhMzcyNzg0OGEyYi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJD
b2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25z
AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkASXNOdWxsT3JFbXB0eQAAgJtJAHMATgB1
AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8A
IABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABl
ACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8A
NgA0ADEAMQBjADcAMwAxADIAZQBmADEANABhAGQAZAA5ADcAZgA2ADgAYQAzADcAMgA3ADgANAA4
AGEAMgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAA2q+o26int
QobSr+kXAziaAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCQcHAgICAgICAgQAAQIOCSADARI9
HQgSQQMGEj0DBh0IBCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKA
gQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIM
AyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygA
AgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfNjQxMWM3MzEyZWYxNGFkZDk3ZjY4YTM3Mjc4NDhhMmIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AADgNAAAAAAAAAAAAAD6NAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7DQAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADYANAAxADEAYwA3ADMAMQAyAGUAZgAxADQAYQBkAGQAOQA3AGYANgA4AGEAMwA3ADIA
NwA4ADQAOABhADIAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgA0ADEAMQBjADcA
MwAxADIAZQBmADEANABhAGQAZAA5ADcAZgA2ADgAYQAzADcAMgA3ADgANAA4AGEAMgBiAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2ADQA
MQAxAGMANwAzADEAMgBlAGYAMQA0AGEAZABkADkANwBmADYAOABhADMANwAyADcAOAA0ADgAYQAy
AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgA0ADEA
MQBjADcAMwAxADIAZQBmADEANABhAGQAZAA5ADcAZgA2ADgAYQAzADcAMgA3ADgANAA4AGEAMgBi
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6411c7312ef14add97f68a3727848a2b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[UserID]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[FullName]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="FullName"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[Age]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[Email]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="29"
                      cachedName="Email"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[RegistrationDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[LastLoginDate]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0].Columns[PurchaseTotal]"
                      cachedCodepage="65001"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0].Columns[IsValid]"
                      dataType="bool"
                      lineageId="Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0].Columns[IsValid]"
                      name="IsValid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Data to Staging Tbl\stgUser_noConversion"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
              description="OLE DB 目标"
              name="stgUser_noConversion"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="指定用于打开行集的数据库对象的名称。"
                  name="OpenRowset">[stg].[Users_noConversion]</property>
                <property
                  dataType="System.String"
                  description="指定包含用于打开行集的数据库对象名的变量。"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="要执行的 SQL 命令。"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="指定当数据源中没有代码页信息时使用的列代码页。"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="指定用于访问数据库的模式。"
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  connectionManagerRefId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  description="指定用于访问数据库的 OLE DB 运行时连接。"
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入]"
                  errorOrTruncationOperation="插入"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB 目标输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_UserID"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_UserID]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_FullName]"
                      cachedDataType="wstr"
                      cachedLength="25"
                      cachedName="Conv_FullName"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_FullName]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_Age"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Age]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_Email]"
                      cachedDataType="wstr"
                      cachedLength="29"
                      cachedName="Conv_Email"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_Email]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_RegistrationDate"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_LastLoginDate"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].Columns[Conv_PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Conv_PurchaseTotal"
                      externalMetadataColumnId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Outputs[OLE DB 目标错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB 目标错误输出"
                  synchronousInputId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\stgUser_noConversion.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Data to Staging Tbl\stgUser_noConversion.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Data to Staging Tbl\stgUser_noConversion.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Data to Staging Tbl.Paths[Contains null]"
              endId="Package\Import Data to Staging Tbl\Data type conversion 2.Inputs[数据转换输入]"
              name="Contains null"
              startId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[Contains null]" />
            <path
              refId="Package\Import Data to Staging Tbl.Paths[No null values]"
              endId="Package\Import Data to Staging Tbl\Data type conversion 1.Inputs[数据转换输入]"
              name="No null values"
              startId="Package\Import Data to Staging Tbl\Conditional Split.Outputs[No null values]" />
            <path
              refId="Package\Import Data to Staging Tbl.Paths[Output 0]"
              endId="Package\Import Data to Staging Tbl\Conditional Split.Inputs[有条件拆分输入]"
              name="Output 0"
              startId="Package\Import Data to Staging Tbl\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Import Data to Staging Tbl.Paths[平面文件源输出]"
              endId="Package\Import Data to Staging Tbl\Script Component.Inputs[Input 0]"
              name="平面文件源输出"
              startId="Package\Import Data to Staging Tbl\csv file source.Outputs[平面文件源输出]" />
            <path
              refId="Package\Import Data to Staging Tbl.Paths[数据转换输出]"
              endId="Package\Import Data to Staging Tbl\Load to stgUser_Problem1.Inputs[OLE DB 目标输入]"
              name="数据转换输出"
              startId="Package\Import Data to Staging Tbl\Data type conversion 2.Outputs[数据转换输出]" />
            <path
              refId="Package\Import Data to Staging Tbl.Paths[数据转换输出1]"
              endId="Package\Import Data to Staging Tbl\stgUser_noConversion.Inputs[OLE DB 目标输入]"
              name="数据转换输出"
              startId="Package\Import Data to Staging Tbl\Data type conversion 1.Outputs[数据转换输出]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert or Update data in prodUser tbl"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CE2A270A-81EE-4B53-B9A9-DCA6565C2F6C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert or Update data in prodUser tbl"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5DFDF22C-97BC-4D99-ABBA-B472B05B677F}"
          SQLTask:SqlStatementSource="MERGE INTO prod.Users AS target&#xA;&#xA;USING stg.Users AS source&#xA;&#xA;ON target.UserID = source.UserID&#xA;&#xA;WHEN MATCHED THEN&#xA;    &#xA;UPDATE SET &#xA;        &#xA;target.FullName = source.FullName,&#xA;        &#xA;target.Age = source.Age,&#xA;        &#xA;target.Email = source.Email,&#xA;        &#xA;target.RegistrationDate = source.RegistrationDate,&#xA;        &#xA;target.LastLoginDate = source.LastLoginDate,&#xA;        &#xA;target.PurchaseTotal = source.PurchaseTotal&#xA;&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA;    &#xA;INSERT (UserID, FullName, Age, Email, RegistrationDate, LastLoginDate, PurchaseTotal)&#xA;    &#xA;VALUES (source.UserID, source.FullName, source.Age, source.Email, source.RegistrationDate, source.LastLoginDate, source.PurchaseTotal);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Transformation in stg and load to prodUsers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="数据流任务"
      DTS:DTSID="{2E35D91A-0B23-4027-AA12-303D4634892F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Transformation in stg and load to prodUsers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="聚合;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;3"
              description="使用 Average、Sum、Count、Max 和 Min 等函数聚合数据。例如，对数据进行分组以计算每个产品的销售总额或每天的平均访问量。"
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="指定按聚合生成的键分成的组的大致数目。“低”表示五十万个键值，“中”表示个五百万个键值，而“高”表示超过两千五百万个键值。如果未指定，则表示没有使用 KeyScale 值。"
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="指定按聚合生成的键分成的组的准确数目。如果指定了 KeyScale 值，则 Keys 中的值优先。"
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="指定一列中聚合不重复计数的非重复值的大致数目。“低”表示五十万个键值，“中”表示五百万个键值，而“高”表示超过两千五百万个键值。如果未指定，则表示未使用 CountDistinctScale 值。"
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="指定一列中聚合不重复计数的非重复值的确切数目。如果指定了 CountDistinctScale 值，则 CountDistinctKeys 中的值优先。"
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="指定在聚合过程中内存可以扩展的百分比。有效值介于 1 和 100 之间。"
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1]"
                  name="聚合输入 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Conv_UserID]"
                      cachedDataType="i4"
                      cachedName="Conv_UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_UserID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Derived_RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="Derived_RegistrationDate"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Derived_LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="Derived_LastLoginDate"
                      cachedSortKeyPosition="-3"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Derived_PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Derived_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Derived_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived_Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Conv_FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_FullName"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_FullName]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1].Columns[Derived_Age]"
                      cachedDataType="i4"
                      cachedName="Derived_Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Age]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1]"
                  name="聚合输出 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="指定按聚合生成的键分成的组的大致数目。“低”表示五十万个键值，“中”表示个五百万个键值，而“高”表示超过两千五百万个键值。如果未指定，则表示没有使用 KeyScale 值。"
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="指定按聚合生成的键分成的组的准确数目。如果指定了 KeyScale 值，则 Keys 中的值优先。"
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[aggre_UserID]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[aggre_UserID]"
                      name="aggre_UserID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_UserID]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[earliest_RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[earliest_RegistrationDate]"
                      name="earliest_RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_RegistrationDate]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">6</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[latest_LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[latest_LastLoginDate]"
                      name="latest_LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_LastLoginDate]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">7</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[sum_PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[sum_PurchaseTotal]"
                      name="sum_PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_PurchaseTotal]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Email]"
                      name="Derived_Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Email]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Conv_FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Conv_FullName]"
                      name="Conv_FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_FullName]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Age]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Age]"
                      name="Derived_Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定聚合中使用的输入列的 ID。"
                          name="AggregationColumnId">#{Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Age]}</property>
                        <property
                          dataType="System.Int32"
                          description="指定聚合类型。"
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="指示列是因为可能包含过大的数据而需要特殊处理，还是需要超出 float 数据类型的精度。"
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="指定字符串比较选项。"
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="有条件拆分;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="根据数据内容将数据行路由到不同的输出。使用条件(SSIS 表达式)指定要路由的行。例如，将需要清理的记录与准备加载的记录分隔开，或仅路由记录的某个子集。"
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]"
                  description="有条件拆分转换的输入"
                  name="有条件拆分输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入].Columns[isValid]"
                      cachedDataType="bool"
                      cachedName="isValid"
                      lineageId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[Valid data type]"
                  description="有条件拆分转换的输出 1"
                  errorOrTruncationOperation="计算"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Valid data type"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式。此表达式版本使用世系标识符而不是列名。"
                      name="Expression">#{Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式的友好版本。此表达式版本使用列名。"
                      expressionType="Notify"
                      name="FriendlyExpression">isValid ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="指定该条件在转换计算的条件列表中所处的位置。计算顺序是从最小值到最大值。"
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[Invalid data type]"
                  description="有条件拆分转换的输出 2"
                  errorOrTruncationOperation="计算"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Invalid data type"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式。此表达式版本使用世系标识符而不是列名。"
                      name="Expression">#{Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]} ==  FALSE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定表达式的友好版本。此表达式版本使用列名。"
                      expressionType="Notify"
                      name="FriendlyExpression">isValid ==  FALSE </property>
                    <property
                      dataType="System.Int32"
                      description="指定该条件在转换计算的条件列表中所处的位置。计算顺序是从最小值到最大值。"
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[default]"
                  description="有条件拆分转换的默认输出"
                  exclusionGroup="1"
                  name="default"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[有条件拆分错误输出]"
                  description="有条件拆分转换的错误输出"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="有条件拆分错误输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[有条件拆分错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Data Check"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Data Check"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b8fc1f52ea7045c7ac2f29b10a416b29")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b8fc1f52ea7045c7ac2f29b10a416b29")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string emailPattern = @"^[^@\s]+@[^@\s]+\.[^@\s]+$";
        Row.validemail = System.Text.RegularExpressions.Regex.IsMatch(Row.ConvEmail, emailPattern);

        // Initialize the valid_PurchaseTotal flag as false
        Row.validPurchaseTotal = false;

        if (!Row.ConvPurchaseTotal_IsNull)
        {
            bool isValidPurchaseTotal = Row.ConvPurchaseTotal >= 0;

            Row.validPurchaseTotal = isValidPurchaseTotal;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ConvEmail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool ConvEmail_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Single ConvPurchaseTotal
    {
        get
        {
            return Buffer.GetSingle(BufferColumnIndexes[1]);
        }
    }
    public bool ConvPurchaseTotal_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Boolean validemail
    {
        set
        {
            this[2] = value;
        }
    }
    public bool validemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean validPurchaseTotal
    {
        set
        {
            this[3] = value;
        }
    }
    public bool validPurchaseTotal_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b8fc1f52ea7045c7ac2f29b10a416b29.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{40DBC8D2-ACA0-47AF-A675-27D05FDEB905}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b8fc1f52ea7045c7ac2f29b10a416b29</RootNamespace>
    <AssemblyName>SC_b8fc1f52ea7045c7ac2f29b10a416b29</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_b8fc1f52ea7045c7ac2f29b10a416b29</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_b8fc1f52ea7045c7ac2f29b10a416b29</msb:DisplayName>
    <msb:ProjectId>{8732DCF4-0EFC-45E4-B415-A7C8A503C8C9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_b8fc1f52ea7045c7ac2f29b10a416b29.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Settings.get_Default():SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Sett" +
    "ings")]

namespace SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b8fc1f52ea7045c7ac2f29b10a416b29.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b8fc1f52ea7045c7ac2f29b10a416b29.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOSJqmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAApjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
MwAAAAAAAEgAAAACAAUAMCIAAGwQAAABAAAAAAAAAJwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAQAAAAAEAABFyAQAAcAoD
A28GAAAGBigSAAAKbwoAAAYDFm8MAAAGA28JAAAGLRgDbwgAAAYiAAAAAP4FFv4BCwMHbwwAAAYq
HgIoEAAABioqAgMEBSgTAAAKKlICexQAAAoCexUAAAoWlG8WAAAKKiICFigXAAAKKlICexQAAAoC
exUAAAoXlG8YAAAKKiICFygXAAAKKjoCGAOMGwAAASgZAAAKKloDLAgCGCgaAAAKKnI3AABwcxsA
AAp6OgIZA4wbAAABKBkAAAoqWgMsCAIZKBoAAAoqcjcAAHBzGwAACnoeAigcAAAKKh4CKB0AAAoq
fgIoHgAACgICcxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHLUAABwGm8fAAAKLBUCBQIDKCAAAAoO
BHMFAAAGbxIAAAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoIQAACgIDfQMAAAQqOgIoIQAACgID
fQQAAAQqHgIoIQAACiqufgUAAAQtHnLkAABw0AcAAAIoIgAACm8jAAAKcyQAAAqABQAABH4FAAAE
Khp+BgAABCoeAoAGAAAEKhp+BwAABCoeAiglAAAKKi5zGwAABoAHAAAEKgAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPgFAAAjfgAAZAYAAOQGAAAjU3RyaW5ncwAAAABIDQAA
WAEAACNVUwCgDgAAEAAAACNHVUlEAAAAsA4AALwBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA
+gEzABYAAAEAAAAhAAAACAAAAAcAAAAcAAAAEQAAACUAAAAQAAAAAQAAAAMAAAALAAAADAAAAAEA
AAAEAAAAAQAAAAAASQMBAAAAAAAGAO4B9gQGAIIC9gQGADoB4wQPAGoFAAAGAGcBOAQGANEBOAQG
ALIBOAQGAGkCOAQGAA4COAQGACcCOAQGAH4BOAQGAJkBvQIKAEIChwAKALUEhwAOAKYEhwAKAIEE
hwAKAE8GhwAGABIG6AMGAB0B4wQGAMYEFgUGAHUEIwQSAO0AFgMSAE4BFgMSANUADgQGAAIB9gQS
ANAG5wUGAPsD6AMGAEoE6AMGANoC6AMGAGQE6AMGAKgA6AMGAE8A6AMGANoGOAQAAAAAJQAAAAAA
AQABAAEAEAADBAAAEAABAAEAAQAQAJkEAAA5AAEABQABABAAMQYAAEUAAQAQAAEAEAAGBgAASQAD
ABQAAQAQAKgFAABJAAQAFQAAABAAHQV5BUkABQAWAAABEADXBXkFYQAHABoABgAGBoYABgCoBYoA
AQA/Bo4AAQA/Bo4AEQDvA5IAEQDFAJYAEQA/AJoAUCAAAAAAxgCgAgYAAQBYIAAAAADGAKsCBgAB
AGAgAAAAAMYAsQaeAAEArCAAAAAAhhjWBAYAAgC0IAAAAACGGNYEJgACAL8gAAAAAIYILAOkAAUA
1CAAAAAAhgisA00ABQDdIAAAAACGCAADqAAFAPIgAAAAAIYIjwNNAAUA+yAAAAAAhgg6A6wABQAK
IQAAAACGCMEDrAAGACEhAAAAAIYI6QKsAAcAMCEAAAAAhghxA6wACABHIQAAAACGAMgGTQAJAE8h
AAAAAIYAGQZNAAkAVyEAAAAAhhjWBAYACQB3IQAAAADGAKQGsQAJAJwhAAAAAMYBnQaeAA0AryEA
AAAAxgGxBp4ADgCxIQAAAACGGNYEuwAPAMAhAAAAAIYY1gS7ABAAzyEAAAAAgxjWBAYAEQDXIQAA
AACTCMIEwQARAAMiAAAAAJMIrQDGABEACiIAAAAAkwi5AMsAEQASIgAAAACWCCUG0QASABkiAAAA
AIYY1gQGABIAISIAAAAAkRjcBNYAEgAAAAEAzAYAAAEAuwQAAAIAsgUAAAMAjwQAAAEAtwIAAAEA
twIAAAEAtwIAAAEAtwIAAAEALgAAAAIAfQAAAAMAuwQAAAQAjwQAAAEAuwQAAAEAzAYAAAEAVQYA
AAEAVQYAAAEAtwIJANYEAQARANYEBgAZANYECgApANYEEAAxANYEEAA5ANYEEABBANYEEABJANYE
EABRANYEEABZANYEEABhANYEEABpANYEBgCZANYEBgC5ANYEFQDJANYEBgCJAKACBgCJAKsCBgDR
AOECIABxANYEJgBxALsEMABxALIFNAB5ANcCOABxANADPQB5AHMAQgBxAN8DRwBxANcDAQDhANYE
EABxAMgGTQBxABkGTQCJANYEBgDpAOAFUQCJAMYFWACRANYEBgD5AGEAXgD5ANYGZgChANYEbADB
ANYEBgAuAAsA9QAuABMA/gAuABsAHQEuACMAJgEuACsATwEuADMATwEuADsATwEuAEMAJgEuAEsA
VQEuAFMATwEuAFsAbAFDAGMAtgHhAHsAtgHjAGsAtgEpAXMAHQFJAXMAHQEbAAMAAQAHAAkACAAL
AAAAMAPaAAAAsAPeAAAABAPiAAAAkwPeAAAAPgPeAAAAxQPeAAAA7QLeAAAAdQPeAAAAxgTmAAAA
zQDrAAAAKQbwAAIABgADAAIABwAFAAIACAAHAAIACQAJAAEACgALAAEACwANAAEADAAPAAEADQAR
AAIAFwATAAIAGAAVAAEAGQAVAAIAGgAXAASAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAA
AAB0ADYAAAAAABAAAAAAAAAAAAAAAH0AXwYAAAAAEAAAAAAAAAAAAAAAfQB8BgAAAAAEAAAAAAAA
AAAAAAB0AOgDAAAAAAAAAAABAAAAJwUAAAAAAAAAU0NfYjhmYzFmNTJlYTcwNDVjN2FjMmYyOWIx
MGE0MTZiMjkAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0U2luZ2xlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAElzTWF0Y2gAc2V0X3ZhbGlkUHVyY2hhc2VUb3RhbABn
ZXRfQ29udlB1cmNoYXNlVG90YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9Db252RW1haWwA
c2V0X3ZhbGlkZW1haWwAU0NfYjhmYzFmNTJlYTcwNDVjN2FjMmYyOWIxMGE0MTZiMjkuZGxsAHNl
dF92YWxpZFB1cmNoYXNlVG90YWxfSXNOdWxsAGdldF9Db252UHVyY2hhc2VUb3RhbF9Jc051bGwA
Z2V0X0NvbnZFbWFpbF9Jc051bGwAc2V0X3ZhbGlkZW1haWxfSXNOdWxsAFNldE51bGwAc2V0X0l0
ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABP
dXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2I4ZmMxZjUyZWE3MDQ1Yzdh
YzJmMjliMTBhNDE2YjI5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ19iOGZjMWY1MmVhNzA0NWM3YWMyZjI5YjEwYTQxNmIyOS5Qcm9wZXJ0aWVzAFZhcmlh
YmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxz
AFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZS
b3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29t
cG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5l
eHRSb3cAUmVnZXgAZ2V0X0Fzc2VtYmx5AAAANV4AWwBeAEAAXABzAF0AKwBAAFsAXgBAAFwAcwBd
ACsAXAAuAFsAXgBAAFwAcwBdACsAJAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AYgA4AGYAYwAxAGYANQAyAGUAYQA3ADAA
NAA1AGMANwBhAGMAMgBmADIAOQBiADEAMABhADQAMQA2AGIAMgA5AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAMXzuo0uwxZFunmzs3EQdF4ABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEVkEBwIOAgUAAgIODgkgAwESPR0IEkEDBhI9AwYdCAQgAQ4IBCABAggEIAEM
CAUgAgEIHAMgAAIGIAICDhF5BSABHQgIBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxWGTTgiQiJ
hF3NgIDMkQMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAMgAA4DIAAMBCABAQIJIAQBCA4S
PRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACAygADAQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfYjhmYzFmNTJlYTcwNDVjN2FjMmYyOWIxMGE0MTZiMjkAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAfDMAAAAAAAAAAAAA
ljMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBiADgAZgBjADEAZgA1ADIAZQBhADcAMAA0ADUAYwA3AGEAYwAyAGYAMgA5AGIAMQAw
AGEANAAxADYAYgAyADkAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGIAOABmAGMAMQBm
ADUAMgBlAGEANwAwADQANQBjADcAYQBjADIAZgAyADkAYgAxADAAYQA0ADEANgBiADIAOQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYgA4
AGYAYwAxAGYANQAyAGUAYQA3ADAANAA1AGMANwBhAGMAMgBmADIAOQBiADEAMABhADQAMQA2AGIA
MgA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGIAOABm
AGMAMQBmADUAMgBlAGEANwAwADQANQBjADcAYQBjADIAZgAyADkAYgAxADAAYQA0ADEANgBiADIA
OQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAqDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b8fc1f52ea7045c7ac2f29b10a416b29</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">9F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Data Check.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Check.Inputs[Input 0].Columns[Conv_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Check.Inputs[Input 0].Columns[Conv_PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Conv_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Data Check.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]"
                      name="valid_email" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]"
                      name="valid_PurchaseTotal" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="数据转换;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="数据转换"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入]"
                  name="数据转换输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[UserID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="UserID"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[Age]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入].Columns[PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出]"
                  exclusionGroup="1"
                  name="数据转换输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_UserID]"
                      name="Conv_UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_FullName]"
                      name="Conv_FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]"
                      dataType="i4"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]"
                      name="Conv_Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]"
                      name="Conv_Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]"
                      name="Conv_RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]"
                      name="Conv_LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      dataType="r4"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]"
                      name="Conv_PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定用作转换数据源的输入列。"
                          name="SourceInputColumnLineageID">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="指示该列是否使用更快、不分区域设置的分析例程。"
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="数据转换错误输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="派生列;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
              description="通过对转换输入列应用表达式来创建新的列值。创建新列或覆盖现有列。例如，将 &quot;first name&quot; 列和 &quot;last name&quot; 列中的值连接在一起以创建一个 &quot;full name&quot; 列。"
              name="Derived Column for Data Check"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入]"
                  description="派生列转换的输入"
                  name="派生列输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[Conv_Age]"
                      cachedDataType="i4"
                      cachedName="Conv_Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[Conv_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[Conv_RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="Conv_RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[Conv_LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="Conv_LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[valid_email]"
                      cachedDataType="bool"
                      cachedName="valid_email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[valid_PurchaseTotal]"
                      cachedDataType="bool"
                      cachedName="valid_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入].Columns[Conv_PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Conv_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出]"
                  description="派生列转换的默认输出"
                  exclusionGroup="1"
                  name="派生列输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Age]"
                      dataType="i4"
                      errorOrTruncationOperation="计算"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Age]"
                      name="Derived_Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列表达式"
                          name="Expression">[ISNULL](#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]}) || #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]} &lt; 0 || #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]} &gt; 120 ? NULL(DT_I4) : #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列友好表达式"
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Conv_Age) || Conv_Age &lt; 0 || Conv_Age &gt; 120 ? NULL(DT_I4) : Conv_Age</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="计算"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Email]"
                      name="Derived_Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列表达式"
                          name="Expression">#{Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]} ? #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]} : NULL(DT_WSTR,255)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列友好表达式"
                          expressionType="Notify"
                          name="FriendlyExpression">valid_email ? Conv_Email : NULL(DT_WSTR,255)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="计算"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_RegistrationDate]"
                      name="Derived_RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列表达式"
                          name="Expression">[ISNULL](#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]}) ? NULL(DT_DBDATE) : #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列友好表达式"
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Conv_RegistrationDate) ? NULL(DT_DBDATE) : Conv_RegistrationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="计算"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_LastLoginDate]"
                      name="Derived_LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列表达式"
                          name="Expression">[ISNULL](#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]}) ? NULL(DT_DBDATE) : #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列友好表达式"
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Conv_LastLoginDate) ? NULL(DT_DBDATE) : Conv_LastLoginDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_PurchaseTotal]"
                      dataType="r4"
                      errorOrTruncationOperation="计算"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_PurchaseTotal]"
                      name="Derived_PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列表达式"
                          name="Expression">#{Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]} ? #{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]} : NULL(DT_R4)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="派生列友好表达式"
                          expressionType="Notify"
                          name="FriendlyExpression">valid_PurchaseTotal ? Conv_PurchaseTotal : NULL(DT_R4)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列错误输出]"
                  description="派生列转换的错误输出"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="派生列错误输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="排序;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;1"
              description="当不能在输入数据的来源中对其进行排序时，按升序或降序对输入数据进行排序。例如，先按 &quot;customer id&quot; 对销售数据进行排序，再将该数据写入到一个平面文件，然后将此文件交付给另一个部门。注意: 建议不要对大型数据流使用此转换。"
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="指示排序转换是否删除排序值重复的行。"
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="指定要用于排序的最大线程数。"
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序]"
                  name="对输入进行排序">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[StgID]"
                      cachedDataType="i4"
                      cachedName="StgID"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[StgID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[UserID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="UserID"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Age]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[isValid]"
                      cachedDataType="bool"
                      cachedName="isValid"
                      lineageId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_UserID]"
                      cachedDataType="i4"
                      cachedName="Conv_UserID"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_FullName"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_Age]"
                      cachedDataType="i4"
                      cachedName="Conv_Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="Conv_RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="Conv_LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Conv_PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Conv_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[valid_email]"
                      cachedDataType="bool"
                      cachedName="valid_email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[valid_PurchaseTotal]"
                      cachedDataType="bool"
                      cachedName="valid_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Derived_Age]"
                      cachedDataType="i4"
                      cachedName="Derived_Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Derived_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived_Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Derived_RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="Derived_RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Derived_LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="Derived_LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">-3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序].Columns[Derived_PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Derived_PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="指定字符数据的比较选项。"
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="指定列的排序顺序。"
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序]"
                  isSorted="true"
                  name="对输出进行排序">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[StgID]"
                      name="StgID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[StgID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[UserID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[UserID]"
                      name="UserID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Age]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[RegistrationDate]"
                      name="RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[LastLoginDate]"
                      name="LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[isValid]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[isValid]"
                      name="isValid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_UserID]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_UserID]"
                      name="Conv_UserID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_FullName]"
                      name="Conv_FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_Age]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_Age]"
                      name="Conv_Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_Email]"
                      name="Conv_Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_RegistrationDate]"
                      name="Conv_RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_LastLoginDate]"
                      name="Conv_LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_PurchaseTotal]"
                      dataType="r4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Conv_PurchaseTotal]"
                      name="Conv_PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出].Columns[Conv_PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[valid_email]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[valid_email]"
                      name="valid_email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[valid_PurchaseTotal]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[valid_PurchaseTotal]"
                      name="valid_PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0].Columns[valid_PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Age]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Age]"
                      name="Derived_Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_Email]"
                      name="Derived_Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_RegistrationDate]"
                      name="Derived_RegistrationDate"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_LastLoginDate]"
                      name="Derived_LastLoginDate"
                      sortKeyPosition="-3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_PurchaseTotal]"
                      dataType="r4"
                      lineageId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序].Columns[Derived_PurchaseTotal]"
                      name="Derived_PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="指定与此输出列关联的输入列的世系标识符。"
                          name="SortColumnId">#{Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出].Columns[Derived_PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
              description="OLE DB 目标"
              name="stgUsers_Problem2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="指定用于打开行集的数据库对象的名称。"
                  name="OpenRowset">[stg].[Users_Problem2]</property>
                <property
                  dataType="System.String"
                  description="指定包含用于打开行集的数据库对象名的变量。"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="要执行的 SQL 命令。"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="指定当数据源中没有代码页信息时使用的列代码页。"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="指定用于访问数据库的模式。"
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  connectionManagerRefId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  description="指定用于访问数据库的 OLE DB 运行时连接。"
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入]"
                  errorOrTruncationOperation="插入"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB 目标输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[UserID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[Age]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].Columns[PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Outputs[OLE DB 目标错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB 目标错误输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
              description="OLE DB 目标"
              name="stgUsers_Transformation"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="指定用于打开行集的数据库对象的名称。"
                  name="OpenRowset">[stg].[Users_Transformation]</property>
                <property
                  dataType="System.String"
                  description="指定包含用于打开行集的数据库对象名的变量。"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="要执行的 SQL 命令。"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="指定当数据源中没有代码页信息时使用的列代码页。"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="指定用于访问数据库的模式。"
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  connectionManagerRefId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  description="指定用于访问数据库的 OLE DB 运行时连接。"
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入]"
                  errorOrTruncationOperation="插入"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB 目标输入">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[aggre_UserID]"
                      cachedDataType="i4"
                      cachedName="aggre_UserID"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[aggre_UserID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[Conv_FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Conv_FullName"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Conv_FullName]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[Derived_Age]"
                      cachedDataType="i4"
                      cachedName="Derived_Age"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Age]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[Derived_Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived_Email"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[Derived_Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[earliest_RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="earliest_RegistrationDate"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[earliest_RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[latest_LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="latest_LastLoginDate"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[latest_LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].Columns[sum_PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="sum_PurchaseTotal"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1].Columns[sum_PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="10"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="10"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Outputs[OLE DB 目标错误输出]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB 目标错误输出"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB 源;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;7"
              description="OLE DB 源"
              name="stgUser_noConversion"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="指定用于打开行集的数据库对象的名称。"
                  name="OpenRowset">[stg].[Users_noConversion]</property>
                <property
                  dataType="System.String"
                  description="指定包含用于打开行集的数据库对象名的变量。"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="要执行的 SQL 命令。"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="包含要执行的 SQL 命令的变量。"
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="指定当数据源中没有代码页信息时使用的列代码页。"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="指定用于访问数据库的模式。"
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="SQL 命令中的参数与变量之间的映射。"
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  connectionManagerRefId="Package.ConnectionManagers[KoreAssignment_Daniel_Wu]"
                  description="指定用于访问数据库的 OLE DB 运行时连接。"
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出]"
                  name="OLE DB 源输出">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[StgID]"
                      dataType="i4"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[StgID]"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[StgID]"
                      name="StgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[UserID]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[Age]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[RegistrationDate]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[LastLoginDate]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="转换"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[PurchaseTotal]"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出]"
                  isErrorOut="true"
                  name="OLE DB 源错误输出">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[StgID]"
                      name="StgID" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[UserID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[Age]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源错误输出].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Transformation in stg and load to prodUsers\Validate data types"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Validate data types"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        bool isValid = true;
        string logFilePath = @"D:\Users\chen\Desktop\ETL_Daniel\ETL_DanielWu\Script_Log.txt";

        try
        {
            if (Row.UserID_IsNull || !int.TryParse(Row.UserID.ToString(), out _))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid UserID: {Row.UserID}\n");
            }

            if (Row.FullName_IsNull || string.IsNullOrEmpty(Row.FullName))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid FullName: {Row.FullName}\n");
            }

            if (Row.Age_IsNull || !int.TryParse(Row.Age.ToString(), out int ageValue) || ageValue <= 0)
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid Age: {Row.Age}\n");
            }

            if (Row.Email_IsNull || string.IsNullOrEmpty(Row.Email))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid Email: {Row.Email}\n");
            }

            if (Row.RegistrationDate_IsNull || !DateTime.TryParse(Row.RegistrationDate.ToString(), out _))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid RegistrationDate: {Row.RegistrationDate}\n");
            }

            if (Row.LastLoginDate_IsNull || !DateTime.TryParse(Row.LastLoginDate.ToString(), out _))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid LastLoginDate: {Row.LastLoginDate}\n");
            }

            if (Row.PurchaseTotal_IsNull || !float.TryParse(Row.PurchaseTotal.ToString(), out _))
            {
                isValid = false;
                File.AppendAllText(logFilePath, $"Invalid PurchaseTotal: {Row.PurchaseTotal}\n");
            }
        }
        catch (Exception ex)
        {
            File.AppendAllText(logFilePath, $"Exception: {ex.Message}\n");
            isValid = false;
        }

        Row.isValid = isValid;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_779b88f8b5794d2bbf0586abc02b3d05.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5A949AEA-8905-4A99-AD98-E1F82E268DBD}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_779b88f8b5794d2bbf0586abc02b3d05</RootNamespace>
    <AssemblyName>SC_779b88f8b5794d2bbf0586abc02b3d05</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 StgID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool StgID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String UserID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool UserID_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String FullName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool FullName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Age
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Age_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Email
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Email_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String RegistrationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool RegistrationDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String LastLoginDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool LastLoginDate_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String PurchaseTotal
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool PurchaseTotal_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Boolean isValid
    {
        set
        {
            this[8] = value;
        }
    }
    public bool isValid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Settings.get_Default():SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Sett" +
    "ings")]

namespace SC_779b88f8b5794d2bbf0586abc02b3d05.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_779b88f8b5794d2bbf0586abc02b3d05</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_779b88f8b5794d2bbf0586abc02b3d05</msb:DisplayName>
    <msb:ProjectId>{51F1A036-6A20-4915-BC00-EF94D3F984C0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_779b88f8b5794d2bbf0586abc02b3d05.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_779b88f8b5794d2bbf0586abc02b3d05")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_779b88f8b5794d2bbf0586abc02b3d05")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_779b88f8b5794d2bbf0586abc02b3d05.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_779b88f8b5794d2bbf0586abc02b3d05.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_779b88f8b5794d2bbf0586abc02b3d05.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABRGqmYAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAWjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg5AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
OQAAAAAAAEgAAAACAAUAVCQAAPwTAAABAAAAAAAAAFA4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQAuQEAAAEAABEXCnIBAABw
CwNvCQAABi0UA28IAAAGbxIAAAoSAygTAAAKLR0WCgdyewAAcANvCAAABnKdAABwKBQAAAooFQAA
CgNvCwAABi0NA28KAAAGKBYAAAosHRYKB3KhAABwA28KAAAGcp0AAHAoFAAACigVAAAKA28NAAAG
LRgDbwwAAAZvEgAAChICKBMAAAosBAgWMB0WCgdyxwAAcANvDAAABnKdAABwKBQAAAooFQAACgNv
DwAABi0NA28OAAAGKBYAAAosHRYKB3LjAABwA28OAAAGcp0AAHAoFAAACigVAAAKA28RAAAGLRQD
bxAAAAZvEgAAChIEKBcAAAotHRYKB3IDAQBwA28QAAAGcp0AAHAoFAAACigVAAAKA28TAAAGLRQD
bxIAAAZvEgAAChIEKBcAAAotHRYKB3I5AQBwA28SAAAGcp0AAHAoFAAACigVAAAKA28VAAAGLRQD
bxQAAAZvEgAAChIFKBgAAAotHRYKB3JpAQBwA28UAAAGcp0AAHAoFAAACigVAAAK3iITBgdymQEA
cBEGbxkAAApynQAAcCgUAAAKKBUAAAoWCt4AAwZvFgAABioAAABBHAAAAAAAAAgAAACHAQAAjwEA
ACIAAAAPAAABHgIoGgAABioqAgMEBSgaAAAKKlICexsAAAoCexwAAAoWlG8dAAAKKiICFigeAAAK
KlICexsAAAoCexwAAAoXlG8fAAAKKiICFygeAAAKKlICexsAAAoCexwAAAoYlG8fAAAKKiICGCge
AAAKKlICexsAAAoCexwAAAoZlG8fAAAKKiICGSgeAAAKKlICexsAAAoCexwAAAoalG8fAAAKKiIC
GigeAAAKKlICexsAAAoCexwAAAoblG8fAAAKKiICGygeAAAKKlICexsAAAoCexwAAAoclG8fAAAK
KiICHCgeAAAKKlICexsAAAoCexwAAAodlG8fAAAKKiICHSgeAAAKKjoCHgOMIAAAASggAAAKKloD
LAgCHighAAAKKnKxAQBwcyIAAAp6HgIoIwAACioeAigkAAAKKn4CKCUAAAoCAnMeAAAGfQEAAAQC
AnMfAAAGfQIAAAQqkgRyTgIAcBpvJgAACiwVAgUCAygnAAAKDgRzBQAABm8cAAAGKkorBwIDbx0A
AAYDbxgAAAYt8SoGKjoCKCgAAAoCA30DAAAEKjoCKCgAAAoCA30EAAAEKh4CKCgAAAoqrn4FAAAE
LR5yXgIAcNAHAAACKCkAAApvKgAACnMrAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcA
AAQqHgIoLAAACioucyUAAAaABwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAMAcAACN+AACcBwAAmAcAACNTdHJpbmdzAAAAADQPAADQAgAAI1VTAAQSAAAQAAAAI0dVSUQA
AAAUEgAA6AEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACUAAAAIAAAABwAA
ACYAAAAPAAAALAAAABAAAAABAAAAAwAAABUAAAAWAAAAAQAAAAQAAAABAAAAAACsAwEAAAAAAAYA
fgKrBQYAEgOrBQYAygGYBQ8AHwYAAAYA9wHtBAYAYQLtBAYAQgLtBAYA+QLtBAYAngLtBAYAtwLt
BAYADgLtBAYAKQJNAwoA0gLnAAYA3gCdBAYADwWdBAoAagXnAA4AWwXnAAoANgXnAAoA7AbnAAYA
rwadBAYArQGYBQYAewXLBQYAKgXYBBIAfQGMAxIA3gGMAxIANQHDBAYAkgGrBQYABACdBAYAcwOd
BAYAwgBUAAYAuwCdBAYAsASdBAYA/wSdBAYAGQWdBAYACAGdBAYAlwCdBAYAfwftBAAAAAAuAAAA
AAABAAEAAQAQALgEAAAQAAEAAQABABAATgUAAEEAAQAFAAEAEADOBgAATQABABoAAQAQAJwGAABR
AAMAHgABABAAXQYAAFEABAAfAAAAEADSBS4GUQAFACAAAAEQAIwGLgZpAAcAJAAGAJwGtQAGAF0G
uQABANwGvQABANwGvQARAKQEwQARACUBxQARAHMAyQBQIAAAAADGADADBgABAFggAAAAAMYAOwMG
AAEAYCAAAAAAxgBcB80AAQBEIgAAAACGGIsFBgACAEwiAAAAAIYYiwVTAAIAVyIAAAAAhgg3ANMA
BQBsIgAAAACGCNQDegAFAHUiAAAAAIYIQQAnAAUAiiIAAAAAhgjlA3oABQCTIgAAAACGCMcAJwAF
AKgiAAAAAIYIGQR6AAUAsSIAAAAAhgiDACcABQDGIgAAAACGCAoEegAFAM8iAAAAAIYIogMnAAUA
5CIAAAAAhgh7BHoABQDtIgAAAACGCGgBJwAFAAIjAAAAAIYIRgR6AAUACyMAAAAAhghWAScABQAg
IwAAAACGCC0EegAFACkjAAAAAIYIegMnAAUAPiMAAAAAhghiBHoABQBHIwAAAACGCGcA1wAFAFYj
AAAAAIYI9wPXAAYAbSMAAAAAhgBzB3oABwB1IwAAAACGALYGegAHAH0jAAAAAIYYiwUGAAcAnSMA
AAAAxgBBB9wABwDCIwAAAADGAToHzQALANUjAAAAAMYBXAfNAAwA1yMAAAAAhhiLBeYADQDmIwAA
AACGGIsF5gAOAPUjAAAAAIMYiwUGAA8A/SMAAAAAkwh3BewADwApJAAAAACTCA0B8QAPADAkAAAA
AJMIGQH2AA8AOCQAAAAAlgjCBvwAEAA/JAAAAACGGIsFBgAQAEckAAAAAJEYkQUBARAAAAABAHcH
AAABAHAFAAACAGcGAAADAEQFAAABAEcDAAABAEcDAAABAEwAAAACANQAAAADAHAFAAAEAEQFAAAB
AHAFAAABAHcHAAABAPIGAAABAPIGAAABAEcDCQCLBQEAEQCLBQYAGQCLBQoAKQCLBRAAMQCLBRAA
OQCLBRAAQQCLBRAASQCLBRAAUQCLBRAAWQCLBRAAYQCLBRAAaQCLBQYAqQCLBQYAyQCLBRUA2QCL
BQYAmQAwAwYAmQA7AwYAoQBnAycA4QBNASsA6QCoBjIA8QBOBzkA6QCIBz8AcQBNAUQA+QBNAUwA
eQCLACcAgQCLBVMAgQBwBV0AgQBnBmEAiQABAGUAgQCFBGoAiQBwA28AgQCUBHQAgQCMBAEACQGL
BRAAgQBzB3oAgQC2BnoAmQCLBQYA6QCVBn4AmQB7BoYAoQCLBQYAGQGpAIwAGQF7B5UAsQCLBZsA
0QCLBQYALgALACABLgATACkBLgAbAEgBLgAjAFEBLgArAHoBLgAzAHoBLgA7AHoBLgBDAFEBLgBL
AIABLgBTAHoBLgBbAJcBQwBjAOEB4QB7AOEB4wBrAOEBaQJzAEgBiQJzAEgBGwADAAEABwATAAgA
FQAAADsABQEAANgDCQEAAEUADQEAAOkDCQEAAMsADQEAAB0ECQEAAIcADQEAAA4ECQEAAKYDDQEA
AH8ECQEAAGwBDQEAAEoECQEAAFoBDQEAADEECQEAAH4DDQEAAGYECQEAAGsACQEAAPsDCQEAAHsF
EQEAAC0BFgEAAMYGGwECAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwAC
AA0AEQACAA4AEwACAA8AFQACABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQABABYA
IwABABcAJQACACEAJwACACIAKQABACMAKQACACQAKwAEgAAAAQAAAAAAAAAAAAAAAAAKAAAABAAA
AAAAAAAAAAAAowBeAAAAAAAQAAAAAAAAAAAAAACsAPwGAAAAABAAAAAAAAAAAAAAAKwAGQcAAAAA
BAAAAAAAAAAAAAAAowCdBAAAAAAAAAAAAQAAANwFAAAAAABHZXRJbnQzMgBTQ183NzliODhmOGI1
Nzk0ZDJiYmYwNTg2YWJjMDJiM2QwNQA8TW9kdWxlPgBnZXRfU3RnSUQAZ2V0X1VzZXJJRABJbnB1
dElEAFN5c3RlbS5JTwBtc2NvcmxpYgBzZXRfaXNWYWxpZABkZWZhdWx0SW5zdGFuY2UAZ2V0X0Fn
ZQBnZXRfTWVzc2FnZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBTaW5nbGUA
RmlsZQBnZXRfRnVsbE5hbWUASW5wdXROYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFRyeVBhcnNlAGdldF9MYXN0TG9naW5EYXRlAGdldF9S
ZWdpc3RyYXRpb25EYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmlu
ZwBHZXRTdHJpbmcAZ2V0X1B1cmNoYXNlVG90YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9F
bWFpbABTQ183NzliODhmOGI1Nzk0ZDJiYmYwNTg2YWJjMDJiM2QwNS5kbGwAZ2V0X1N0Z0lEX0lz
TnVsbABnZXRfVXNlcklEX0lzTnVsbABzZXRfaXNWYWxpZF9Jc051bGwAZ2V0X0FnZV9Jc051bGwA
Z2V0X0Z1bGxOYW1lX0lzTnVsbABnZXRfTGFzdExvZ2luRGF0ZV9Jc051bGwAZ2V0X1JlZ2lzdHJh
dGlvbkRhdGVfSXNOdWxsAGdldF9QdXJjaGFzZVRvdGFsX0lzTnVsbABnZXRfRW1haWxfSXNOdWxs
AFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8A
T3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlw
dEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzc3
OWI4OGY4YjU3OTRkMmJiZjA1ODZhYmMwMmIzZDA1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183NzliODhmOGI1Nzk0ZDJiYmYwNTg2YWJjMDJiM2QwNS5Q
cm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0
X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABBcHBlbmRBbGxUZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRS
b3cATmV4dFJvdwBnZXRfQXNzZW1ibHkASXNOdWxsT3JFbXB0eQAAAAB5RAA6AFwAVQBzAGUAcgBz
AFwAYwBoAGUAbgBcAEQAZQBzAGsAdABvAHAAXABFAFQATABfAEQAYQBuAGkAZQBsAFwARQBUAEwA
XwBEAGEAbgBpAGUAbABXAHUAXABTAGMAcgBpAHAAdABfAEwAbwBnAC4AdAB4AHQAACFJAG4AdgBh
AGwAaQBkACAAVQBzAGUAcgBJAEQAOgAgAAADCgAAJUkAbgB2AGEAbABpAGQAIABGAHUAbABsAE4A
YQBtAGUAOgAgAAAbSQBuAHYAYQBsAGkAZAAgAEEAZwBlADoAIAAAH0kAbgB2AGEAbABpAGQAIABF
AG0AYQBpAGwAOgAgAAA1SQBuAHYAYQBsAGkAZAAgAFIAZQBnAGkAcwB0AHIAYQB0AGkAbwBuAEQA
YQB0AGUAOgAgAAAvSQBuAHYAYQBsAGkAZAAgAEwAYQBzAHQATABvAGcAaQBuAEQAYQB0AGUAOgAg
AAAvSQBuAHYAYQBsAGkAZAAgAFAAdQByAGMAaABhAHMAZQBUAG8AdABhAGwAOgAgAAAXRQB4AGMA
ZQBwAHQAaQBvAG4AOgAgAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA3ADcAOQBiADgAOABmADgAYgA1ADcAOQA0AGQAMgBi
AGIAZgAwADUAOAA2AGEAYgBjADAAMgBiADMAZAAwADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAJUtr4FAhgJJp7AoEyJahXcABCABAQgDIAABBSABARERBCABAQ4F
IAEBEWELBwcCDggIETkMEj0DIAAOBgACAg4QCAYAAw4ODg4FAAIBDg4EAAECDgcAAgIOEBE5BgAC
Ag4QDAkgAwESRR0IEkkDBhJFAwYdCAQgAQgIBCABAggEIAEOCAUgAgEIHAMgAAIHIAICDhGAiQUg
AR0ICAgAARKAjRGAkQUgABKAlQcgAgEOEoCVCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJN
AwYSWQMGEl0DBhIgBSABARIMAyAACAQgAQECCSAEAQgOEkUSSQUgAQESTQQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAIAygAAgMoAA4ECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzc3OWI4OGY4YjU3OTRkMmJiZjA1
ODZhYmMwMmIzZDA1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAwOQAAAAAAAAAAAABKOQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAPDkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA3ADcAOQBiADgAOABmADgAYgA1ADcAOQA0AGQAMgBiAGIAZgAwADUAOAA2AGEAYgBjADAA
MgBiADMAZAAwADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcANwA5AGIAOAA4AGYA
OABiADUANwA5ADQAZAAyAGIAYgBmADAANQA4ADYAYQBiAGMAMAAyAGIAMwBkADAANQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwA3ADkA
YgA4ADgAZgA4AGIANQA3ADkANABkADIAYgBiAGYAMAA1ADgANgBhAGIAYwAwADIAYgAzAGQAMAA1
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcANwA5AGIA
OAA4AGYAOABiADUANwA5ADQAZAAyAGIAYgBmADAANQA4ADYAYQBiAGMAMAAyAGIAMwBkADAANQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_779b88f8b5794d2bbf0586abc02b3d05</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">0F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[StgID]"
                      cachedDataType="i4"
                      cachedName="StgID"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[StgID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[UserID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="UserID"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[Age]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Age]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[Email]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="RegistrationDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastLoginDate"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0].Columns[PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]"
                      dataType="bool"
                      lineageId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0].Columns[isValid]"
                      name="isValid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[Invalid data type]"
              endId="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2.Inputs[OLE DB 目标输入]"
              name="Invalid data type"
              startId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[Invalid data type]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[OLE DB 源输出]"
              endId="Package\Transformation in stg and load to prodUsers\Validate data types.Inputs[Input 0]"
              name="OLE DB 源输出"
              startId="Package\Transformation in stg and load to prodUsers\stgUser_noConversion.Outputs[OLE DB 源输出]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[Output 0]"
              endId="Package\Transformation in stg and load to prodUsers\Conditional Split.Inputs[有条件拆分输入]"
              name="Output 0"
              startId="Package\Transformation in stg and load to prodUsers\Validate data types.Outputs[Output 0]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[Output 01]"
              endId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Inputs[派生列输入]"
              name="Output 0"
              startId="Package\Transformation in stg and load to prodUsers\Data Check.Outputs[Output 0]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[Valid data type]"
              endId="Package\Transformation in stg and load to prodUsers\Data Conversion.Inputs[数据转换输入]"
              name="Valid data type"
              startId="Package\Transformation in stg and load to prodUsers\Conditional Split.Outputs[Valid data type]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[对输出进行排序]"
              endId="Package\Transformation in stg and load to prodUsers\Aggregate.Inputs[聚合输入 1]"
              name="对输出进行排序"
              startId="Package\Transformation in stg and load to prodUsers\Sort.Outputs[对输出进行排序]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[数据转换输出]"
              endId="Package\Transformation in stg and load to prodUsers\Data Check.Inputs[Input 0]"
              name="数据转换输出"
              startId="Package\Transformation in stg and load to prodUsers\Data Conversion.Outputs[数据转换输出]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[派生列输出]"
              endId="Package\Transformation in stg and load to prodUsers\Sort.Inputs[对输入进行排序]"
              name="派生列输出"
              startId="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check.Outputs[派生列输出]" />
            <path
              refId="Package\Transformation in stg and load to prodUsers.Paths[聚合输出 1]"
              endId="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation.Inputs[OLE DB 目标输入]"
              name="聚合输出 1"
              startId="Package\Transformation in stg and load to prodUsers\Aggregate.Outputs[聚合输出 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1BBF290C-FB79-40A7-A76F-188C961C9417}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Data to Staging Tbl" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{18744854-E5BE-4D75-AAAD-CF1687DE8D29}"
      DTS:From="Package\Import Data to Staging Tbl"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Transformation in stg and load to prodUsers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{ABE89AFD-CA0F-4504-8F02-CA7D59653FAE}"
      DTS:From="Package\Transformation in stg and load to prodUsers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Insert or Update data in prodUser tbl" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="175,42"
          Id="Package\Execute SQL Task"
          TopLeft="199.615391937234,45.9642833659845" />
        <NodeLayout
          Size="235,42"
          Id="Package\Import Data to Staging Tbl"
          TopLeft="169.27351048242,124.480152370506" />
        <NodeLayout
          Size="337,42"
          Id="Package\Transformation in stg and load to prodUsers"
          TopLeft="118.888893249708,209.341259146089" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="286.944451209827,87.9642833659845">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.5158690045212"
              Start="0,0"
              End="0,29.0158690045212">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.0158690045212" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="287.081201866064,166.480152370506">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.8611067755831"
              Start="0,0"
              End="0,35.3611067755831">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.3611067755831" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="301,42"
          Id="Package\Insert or Update data in prodUser tbl"
          TopLeft="136.923081945386,283.214271244955" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="287.405987597547,251.341259146089">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.8730120988659"
              Start="0,0"
              End="0,24.3730120988659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3730120988659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Data to Staging Tbl">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="211,42"
          Id="Package\Import Data to Staging Tbl\Data type conversion 2"
          TopLeft="419.711553856466,208.705347980924" />
        <NodeLayout
          Size="175,42"
          Id="Package\Import Data to Staging Tbl\Script Component"
          TopLeft="91.7582451239142,58.3673439568057" />
        <NodeLayout
          Size="211,42"
          Id="Package\Import Data to Staging Tbl\Data type conversion 1"
          TopLeft="118.750004355724,193.839275811096" />
        <NodeLayout
          Size="199,42"
          Id="Package\Import Data to Staging Tbl\stgUser_noConversion"
          TopLeft="120.779918960096,307.613083302874" />
        <NodeLayout
          Size="223,42"
          Id="Package\Import Data to Staging Tbl\Load to stgUser_Problem1"
          TopLeft="416.634630024786,279.348201565749" />
        <NodeLayout
          Size="181,42"
          Id="Package\Import Data to Staging Tbl\Conditional Split"
          TopLeft="297.802208725518,123.367340635976" />
        <NodeLayout
          Size="169,42"
          Id="Package\Import Data to Staging Tbl\csv file source"
          TopLeft="371.143176006613,12.4067453978892" />
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[数据转换输出1]"
          TopLeft="222.26496165791,235.839275811096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.7738074917783"
              Start="0,0"
              End="0,64.2738074917783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.2738074917783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[数据转换输出]"
          TopLeft="526.673091940626,250.705347980924">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.642853584825"
              Start="0,0"
              End="0,21.142853584825">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.142853584825" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[Output 0]"
          TopLeft="179.258245123914,100.367343956806">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.043963601604,22.99999667917"
              Start="0,0"
              End="209.043963601604,15.49999667917">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.49999833958499" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.49999833958499"
                    Point2="0,11.499998339585"
                    Point3="4,11.499998339585" />
                  <mssgle:LineSegment
                    End="205.043963601604,11.499998339585" />
                  <mssgle:CubicBezierSegment
                    Point1="205.043963601604,11.499998339585"
                    Point2="209.043963601604,11.499998339585"
                    Point3="209.043963601604,15.499998339585" />
                  <mssgle:LineSegment
                    End="209.043963601604,15.49999667917" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[No null values]"
          TopLeft="359.468875392185,165.367340635976">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.21887103646,28.4719351751201"
              Start="0,0"
              End="-135.21887103646,20.9719351751201">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.53846222869052" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.53846222869052"
                    Point2="0,11.5384622286905"
                    Point3="-4,11.5384622286905" />
                  <mssgle:LineSegment
                    End="-131.21887103646,11.5384622286905" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.21887103646,11.5384622286905"
                    Point2="-135.21887103646,11.5384622286905"
                    Point3="-135.21887103646,15.5384622286905" />
                  <mssgle:LineSegment
                    End="-135.21887103646,20.9719351751201" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-99.10701364323,16.5384622286905,62.99515625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[Contains null]"
          TopLeft="417.135542058851,165.367340635976">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.076011797615,43.3380073449483"
              Start="0,0"
              End="108.076011797615,35.8380073449483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5630478834949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5630478834949"
                    Point2="0,17.5630478834949"
                    Point3="4,17.5630478834949" />
                  <mssgle:LineSegment
                    End="104.076011797615,17.5630478834949" />
                  <mssgle:CubicBezierSegment
                    Point1="104.076011797615,17.5630478834949"
                    Point2="108.076011797615,17.5630478834949"
                    Point3="108.076011797615,21.5630478834949" />
                  <mssgle:LineSegment
                    End="108.076011797615,35.8380073449483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.1383574613075,22.5630478834949,57.799296875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Data to Staging Tbl.Paths[平面文件源输出]"
          TopLeft="371.143176006613,33.4067453978892">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-104.384930882699,45.9605985589165"
              Start="0,0"
              End="-96.8849308826988,45.9605985589165">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-48.1924654413494,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-48.1924654413494,0"
                    Point2="-52.1924654413494,0"
                    Point3="-52.1924654413494,4" />
                  <mssgle:LineSegment
                    End="-52.1924654413494,41.9605985589165" />
                  <mssgle:CubicBezierSegment
                    Point1="-52.1924654413494,41.9605985589165"
                    Point2="-52.1924654413494,45.9605985589165"
                    Point3="-56.1924654413494,45.9605985589165" />
                  <mssgle:LineSegment
                    End="-96.8849308826988,45.9605985589165" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Data to Staging Tbl\stgUser_noConversion">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Data to Staging Tbl\Load to stgUser_Problem1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Transformation in stg and load to prodUsers">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="169,42"
          Id="Package\Transformation in stg and load to prodUsers\Data Conversion"
          TopLeft="196,248.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Transformation in stg and load to prodUsers\Validate data types"
          TopLeft="310,81.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2"
          TopLeft="522,262" />
        <NodeLayout
          Size="133,42"
          Id="Package\Transformation in stg and load to prodUsers\Aggregate"
          TopLeft="337.500012379427,450.127956295146" />
        <NodeLayout
          Size="103,42"
          Id="Package\Transformation in stg and load to prodUsers\Sort"
          TopLeft="203.365392074783,452.098191188155" />
        <NodeLayout
          Size="199,42"
          Id="Package\Transformation in stg and load to prodUsers\stgUser_noConversion"
          TopLeft="303.576923076923,7.19230769230769" />
        <NodeLayout
          Size="181,42"
          Id="Package\Transformation in stg and load to prodUsers\Conditional Split"
          TopLeft="310.333333333333,159" />
        <NodeLayout
          Size="139,42"
          Id="Package\Transformation in stg and load to prodUsers\Data Check"
          TopLeft="188.557692254789,316.53571713214" />
        <NodeLayout
          Size="253,42"
          Id="Package\Transformation in stg and load to prodUsers\Derived Column for Data Check"
          TopLeft="178.365391157788,383.839267924125" />
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[派生列输出]"
          TopLeft="304.865391157788,425.839267924125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.9999990830053,26.2589232640305"
              Start="0,0"
              End="-49.9999990830053,18.7589232640305">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.12946163201525" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.12946163201525"
                    Point2="0,13.1294616320152"
                    Point3="-4,13.1294616320152" />
                  <mssgle:LineSegment
                    End="-45.9999990830053,13.1294616320152" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.9999990830053,13.1294616320152"
                    Point2="-49.9999990830053,13.1294616320152"
                    Point3="-49.9999990830053,17.1294616320152" />
                  <mssgle:LineSegment
                    End="-49.9999990830053,18.7589232640305" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[数据转换输出]"
          TopLeft="280.5,290.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.4423077452112,26.0357171321401"
              Start="0,0"
              End="-22.4423077452112,18.5357171321401">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.01785856607006" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.01785856607006"
                    Point2="0,13.0178585660701"
                    Point3="-4,13.0178585660701" />
                  <mssgle:LineSegment
                    End="-18.4423077452112,13.0178585660701" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.4423077452112,13.0178585660701"
                    Point2="-22.4423077452112,13.0178585660701"
                    Point3="-22.4423077452112,17.0178585660701" />
                  <mssgle:LineSegment
                    End="-22.4423077452112,18.5357171321401" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[对输出进行排序]"
          TopLeft="306.365392074783,472.113073741651">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.134620304644,0"
              Start="0,0"
              End="23.634620304644,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.634620304644,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[Valid data type]"
          TopLeft="372,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-91.4999999999997,47.5"
              Start="0,0"
              End="-91.4999999999997,40">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.249726177437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.249726177437"
                    Point2="0,19.249726177437"
                    Point3="-4,19.249726177437" />
                  <mssgle:LineSegment
                    End="-87.4999999999997,19.249726177437" />
                  <mssgle:CubicBezierSegment
                    Point1="-87.4999999999997,19.249726177437"
                    Point2="-91.4999999999997,19.249726177437"
                    Point3="-91.4999999999997,23.249726177437" />
                  <mssgle:LineSegment
                    End="-91.4999999999997,40" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-88.1549999999998,24.249726177437,67.8490625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[Output 01]"
          TopLeft="258.057692254789,358.53571713214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.8076989029994,25.3035507919847"
              Start="0,0"
              End="46.8076989029994,17.8035507919847">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.65177539599233" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.65177539599233"
                    Point2="0,12.6517753959923"
                    Point3="4,12.6517753959923" />
                  <mssgle:LineSegment
                    End="42.8076989029994,12.6517753959923" />
                  <mssgle:CubicBezierSegment
                    Point1="42.8076989029994,12.6517753959923"
                    Point2="46.8076989029994,12.6517753959923"
                    Point3="46.8076989029994,16.6517753959923" />
                  <mssgle:LineSegment
                    End="46.8076989029994,17.8035507919847" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[Output 0]"
          TopLeft="403.666666666667,123.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5"
              Start="0,0"
              End="0,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[OLE DB 源输出]"
          TopLeft="404.788461538461,49.1923076923077">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3076923076923"
              Start="0,0"
              End="0,24.8076923076923">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8076923076923" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[Invalid data type]"
          TopLeft="429.666666666666,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="182.833333333334,61"
              Start="0,0"
              End="182.833333333334,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7207009857612" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7207009857612"
                    Point2="0,24.7207009857612"
                    Point3="4,24.7207009857612" />
                  <mssgle:LineSegment
                    End="178.833333333334,24.7207009857612" />
                  <mssgle:CubicBezierSegment
                    Point1="178.833333333334,24.7207009857612"
                    Point2="182.833333333334,24.7207009857612"
                    Point3="182.833333333334,28.7207009857612" />
                  <mssgle:LineSegment
                    End="182.833333333334,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.8516666666669,29.7207009857612,75.6758984375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation"
          TopLeft="512.4,453" />
        <EdgeLayout
          Id="Package\Transformation in stg and load to prodUsers.Paths[聚合输出 1]"
          TopLeft="470.500012379427,472.563978147573">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41.899987620573,0"
              Start="0,0"
              End="34.399987620573,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.399987620573,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Transformation in stg and load to prodUsers\stgUsers_Problem2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Transformation in stg and load to prodUsers\stgUser_noConversion">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Transformation in stg and load to prodUsers\stgUsers_Transformation">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>